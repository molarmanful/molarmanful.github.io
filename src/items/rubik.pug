include base.pug

+base()
  +prose()
    +heading() The Rubik Collection
    +subheading() A simple puzzle that has stumped the world for decades. Gadgets and trinkets for the aspiring cuber.

  +prose()
    +subheading().bold A Cube Tutorial
    +img('cubetut', require(MTINY('cubetut')), require(MEDIA('cubetut'))).mt-8
    +text() An interactive tutorial for solving the Rubik's Cube, featuring a clean UI and a companion cube that hides pieces based on the step.
    +text() #[a(href='https://bennyboy.tech/cubetut' target='_blank') Website] (best viewed on desktop)
      |<br>#[a(href='https://github.com/molarmanful/cubetut' target='_blank') Source]

  +prose()
    +subheading().bold pycube
    +img('pycube', require(MTINY('pycube')), require(MEDIA('pycube'))).mt-8
    +text() Made in collaboration with Jimoh Yusuf. A reimplementation of the Rubik's Cube in Processing.py with mouse/keyboard modes and timing.
    +text() #[a(href='https://github.com/molarmanful/pycube' target='_blank') Source]

  +prose()
    +subheading().bold gCube
    +img('gcube', require(MTINY('gcube')), require(MEDIA('gcube'))).mt-8
    +text() Made in collaboration with Michael Casebolt. A web framework for cube simulation with extensive visual customization options.
    +text() #[a(href='https://codepen.io/collection/XOLVLQ' target='_blank') Demos]
      |<br>#[a(href='https://github.com/molarmanful/gCube' target='_blank') Source]

  +prose()
    +subheading().bold MinimalisTimer
    +img('minimalistimer', require(MTINY('minimalistimer')), require(MEDIA('minimalistimer'))).mt-8
    +text() When MinimalisTimer was first created, there weren't many options for cube timers that had mobile-friendly responsive designs. MinimalisTimer was my answer to this problem, focusing on clean UI and accessibility for both mobile and desktop devices.
    +text() #[a(href='https://bennyboy.tech/minimalistimer' target='_blank') Website]
      |<br>#[a(href='https://github.com/molarmanful/minimalistimer' target='_blank') Source]

  +prose()
    +subheading().bold PLL Trainer
    +img('pll', require(MTINY('pll')), require(MEDIA('pll'))).mt-8
    +text() The precursor to MinimalisTimer and my first foray into creating responsive web apps. PLL Trainer was made for speedcubers looking to improve their PLL algorithms execution.
    +text() #[a(href='https://codepen.io/molarmanful/full/VYLqLz' target='_blank') Website]

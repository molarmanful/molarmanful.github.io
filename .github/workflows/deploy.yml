name: deploy
on:
  push:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: true
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-node@v4
        with:
          node-version: '*'
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
      - name: get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> "$GITHUB_OUTPUT"
      - name: setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - run: pnpm i
      - name: setup node_modules/.cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules/.cache'
          key: ${{ runner.os }}-node-cache-${{ hashFiles('**/pnpm-lock.yaml') }}-${{
            github.run_id }}
          restore-keys: ${{ runner.os }}-node-cache-${{ hashFiles('**/pnpm-lock.yaml')
            }}-
      - run: pnpm check
      - run: |
          pnpm build
          touch build/.nojekyll
      - if: github.ref_name == github.event.repository.default_branch
        uses: actions/upload-pages-artifact@v3
        with:
          path: build
      - if: github.ref_name == github.event.repository.default_branch
        id: deployment
        uses: actions/deploy-pages@v4
